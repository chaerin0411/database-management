--데이터베이스관리(담당: 김희숙) (1YB/YA-10주차 실습: 20/11/09)

(p165~193)
(교재6장 관계 데이터 연산)

=========================================================================


/* =================================================== */
-- 관계대수 실습용(집합) (member_set.sql)
/* =================================================== */
/* member_set.sql */

/* 집합연산 (합집합, 교집합, 차집합) */

drop table 정회원;
drop table 준회원;
 
CREATE TABLE 정회원 (
  번호 		INT 	PRIMARY KEY  ,
  이름 		varCHAR(12) 	NOT NULL ,
  주민번호 	CHAR(14) 	NOT NULL ,
  휴대폰번호 	CHAR(14) 	NOT NULL,
  이메일 	VARCHAR(30) ,
  등록일 	CHAR(8)
);

CREATE TABLE 준회원 (
  번호 		INT 	PRIMARY KEY  ,
  이름 		varCHAR(12) 	NOT NULL ,
  주민번호 	CHAR(14) 	NOT NULL ,
  휴대폰번호 	CHAR(14) 	NOT NULL,
  이메일 	VARCHAR(30) ,
  등록일 	CHAR(8)
);
 
/* 정회원 데이터 입력 */

INSERT INTO 정회원 ( 번호, 이름, 주민번호, 휴대폰번호, 이메일, 등록일)
VALUES ( 1, '홍길동', '820416-1234567', '(011) 123-1231','gdhong@hitel.net','20070302');
INSERT INTO 정회원 ( 번호, 이름, 주민번호, 휴대폰번호, 이메일, 등록일)
VALUES ( 2, '임꺽정', '830507-2345678', '(010) 122-1222','jung@hanmail.net','20050422');
 
/* 준회원 데이터 입력 */
 
/* 참고) 집합연산 실습을 위해서 홍길동 동일한 데이터를 입력한다. 즉, 홍길동 은 정회원, 준회원 이다 */
 
INSERT INTO 준회원 ( 번호, 이름, 주민번호, 휴대폰번호, 이메일, 등록일)
VALUES ( 1, '홍길동', '820416-1234567', '(011) 123-1231','gdhong@hitel.net','20070302');
INSERT INTO 준회원 ( 번호, 이름, 주민번호, 휴대폰번호, 이메일, 등록일)
VALUES ( 3, '박찬호', '850321-1456789', '(010) 133-1231','chpark@hanmail.net','20090512');
INSERT INTO 준회원 ( 번호, 이름, 주민번호, 휴대폰번호, 이메일, 등록일)
VALUES ( 4, '선동열', '761122-1889911', '(010) 144-1222','sun@naver.com','20080605');
 
SELECT * FROM 정회원;
SELECT * FROM 준회원;
---------------------------------------------------------
/*-----------------------------------------------------*/
/* 관계대수 [Quiz 01] product */

CREATE TABLE R1 (
	A char(2),
	B char(2)
);

CREATE TABLE S1 (
	A char(2),
	C char(2),
        D char(2)
);

INSERT INTO R1 VALUES ('1','4');
INSERT INTO R1 VALUES ('2','5');

INSERT INTO S1 VALUES ('1','3','4');
INSERT INTO S1 VALUES ('2','2','6');
INSERT INTO S1 VALUES ('3','1','9');


select * from r1;
select * from s1;

-- 1. 카티션 프로덕트

select *
from  R1, S1;

-- 2. 동등조인(equi join)

select *
from  R1, S1
where R1.A = S1.A;

-- 3. 자연조인(natural join)

select R1.A, B, C, D
from  R1, S1
where R1.A = S1.A;

-- 4. 세타조인(theta join)

select *
from  R1, S1
where R1.A >= C;
---------------------------------------------------
[Quiz 02]
/* 조인 실습용  */
drop table if exists freshman;
drop table if exists dmember;

CREATE TABLE freshman ( 
 name    VARCHAR(12) NOT NULL ,
 address VARCHAR(9)
);

CREATE TABLE dmember ( 
 name      VARCHAR(12) NOT NULL ,
 dept_name VARCHAR(30)
);

INSERT INTO freshman VALUES('김광식', '서울');
INSERT INTO freshman VALUES('김현정', '대전');
INSERT INTO freshman VALUES('조영수', '대전');
INSERT INTO dmember VALUES('김광식', '컴퓨터공학과');
INSERT INTO dmember VALUES('김현정', '산업공학과');
INSERT INTO dmember VALUES('이진영', '전자공학과');

SELECT * FROM freshman;
SELECT * FROM dmember;


--------------------------------------------------
-- 다음 실행결과를 노트에 작성하라

-- 1) 내부조인(동등조인)
-- 2) 내부조인(자연조인)

-- 3) 왼쪽외부조인
-- 4) 오른쪽외부조인
-- 5) 완전외부조인
---------------------------------------------------

